---
- name: Install Packages
  become: true
  ansible.builtin.apt:
    name:
      # infra
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-compose-plugin
      # app
      - at # deploy-webhook
      - smartmontools
    update_cache: true

- name: Add Docker Group
  become: true
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    groups: docker
    append: true

- name: Create Base Directories
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/{{ item }}"
    state: directory
    mode: "0755"
  loop: "{{ setup_manager_app_base_directories }}"

- name: Create Data Directories
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/data/{{ item }}"
    state: directory
    mode: "0700"
  loop: "{{ setup_manager_app_data_directories }}"

- name: Check if .refreshToken exists on remote host
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME }}/data/ring-face-recognition/.refreshToken"
  register: ring_face_recognition_remote_token

- name: Transfer refreshToken to remote host
  ansible.builtin.copy:
    src: "./files/temporary/ring-refreshToken"
    dest: "{{ ansible_env.HOME }}/data/ring-face-recognition/.refreshToken"
    mode: "0600"
  when: not ring_face_recognition_remote_token.stat.exists

- name: Clone Git repositories with shallow depth if not already cloned
  ansible.builtin.git:
    repo: "git@github.com:{{ github_user }}/{{ item }}.git"
    dest: "{{ ansible_env.HOME }}/repository/{{ item }}"
    accept_hostkey: true
    version: main
    depth: 1
  loop: "{{ setup_manager_app_clone_repositories }}"
  async: 10
  poll: 0
  changed_when: false
  register: async_jobs

- name: Wait for async tasks to complete
  ansible.builtin.async_status:
    jid: "{{ item.ansible_job_id }}"
  loop: "{{ async_jobs.results }}"
  loop_control:
    label: "{{ item.item }}"
  when: item.ansible_job_id is defined
  register: async_poll_results
  until: async_poll_results.finished
  retries: 30
  delay: 1

- name: Create symlink for Cloudflare Tunnel env
  ansible.builtin.copy:
    content: |
      TOKEN="{{ cloudflare.tunnel.token }}"
    dest: "{{ ansible_env.HOME }}/repository/dockyard/cloudflared-tunnel/.env"
    mode: "0600"
    force: true

- name: Create container network
  community.docker.docker_network:
    name: common_network
    driver: bridge

- name: Find all compose.yaml files
  ansible.builtin.find:
    paths: "{{ ansible_env.HOME }}/repository/dockyard"
    patterns: "compose.yaml"
    recurse: true
  register: compose_files

- name: Start docker compose up -d asynchronously
  community.docker.docker_compose_v2:
    project_src: "{{ item.path | dirname }}"
    state: present
  loop: "{{ compose_files.files }}"
  loop_control:
    label: "{{ item.path }}"
  async: 300
  poll: 0
  changed_when: false
  register: async_jobs

- name: Wait for async tasks to complete
  ansible.builtin.async_status:
    jid: "{{ item.ansible_job_id }}"
  loop: "{{ async_jobs.results }}"
  loop_control:
    label: "{{ item.item.path }}"
  when: item.ansible_job_id is defined
  register: async_poll_results
  until: async_poll_results.finished
  retries: 20
  delay: 3
